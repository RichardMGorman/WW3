#!/bin/sh -e
# --------------------------------------------------------------------------- #
# make_MPI    : Script to manage consecutive compiling of MPI and non-MPI     #
#               elements of WAVEWATCH III, using standard compile scripts.    #
#               Only ww3_shel, ww3_multi, and ww3_sbs1 are compiled for MPI.  #
#                                                                             #
# use     : make_MPI [program [...]]                                          #
#              program: program name of WAVEWATCH III (sub)program.           #
#                                                                             #
#                                                      Hendrik L. Tolman      #
#                                                      April 2010             #
#                                                      March 2014             #
#                                                                             #
#    Copyright 2010-2014 National Weather Service (NWS),                      #
#       National Oceanic and Atmospheric Administration.  All rights          #
#       reserved.  WAVEWATCH III is a trademark of the NWS.                   #
#       No unauthorized use without permission.                               #
#                                                                             #
# --------------------------------------------------------------------------- #
# 1. Preparations                                                             #
# --------------------------------------------------------------------------- #
# 1.a.1 Internal variables

  if test "$#" = '0'
  then
    default_mode=1
    script_args=
  else
    default_mode=0
    script_args="$*"
  fi

  tmp='ww3_temp'           # temporary working directory

  ww3_env="${HOME}/.wwatch3.env"                           # setup file
# The following line must not be removed: it is a switch for local install
# so that all bin scripts point to the local wwatch3.env
# WW3ENV
# For manual install (without install_ww3_tar or install_ww3_svn) make sure to
# either use the generic ww3_env or to add your own ww3_env="${my_directory}"

  if [ ${WWATCH3_ENV} ]; then ww3_env="${WWATCH3_ENV}"; fi # alternate file


# 1.a.2 Get data from setup file - - - - - - - - - - - - - - - - - - - - - - - - 

  if test -f $ww3_env
  then
    set `grep WWATCH3_DIR $ww3_env` ; shift
    main_dir="$*"
    set `grep WWATCH3_TMP $ww3_env` ; shift
    temp_dir="$*"
    set `grep WWATCH3_SOURCE $ww3_env` ; shift
    source="$*"
    set `grep WWATCH3_LIST $ww3_env` ; shift
    list="$*"
  else
    echo "*** Set-up file $ww3_env not found ***"; echo ' '
    exit 1
  fi

  echo "Scratch directory : $temp_dir"
  echo "Save source codes : $source"
  echo "Save listings     : $list"
  echo ' '


# 1.a.3 Check for switch file and makefile - - - - - - - - - - - - - - - - - - - 

  switch_file=$main_dir/bin/switch
  makefile=$main_dir/ftn/makefile
  rm -f $makefile

  if test ! -f $switch_file
  then
    echo "*** switch file $switch_file not found ***" ; echo ' '
    exit 1
  fi


# 1.b ID header  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  clear
  echo ' '
  echo '                ************************************'
  echo '              ***   WAVEWATCH III compile for MPI  ***'
  echo '                ************************************'
  echo ' '

# 1.c Read data from the environment file  - - - - - - - - - - - - - - - - - -

  if test -f $ww3_env
  then
    set `grep WWATCH3_DIR $ww3_env` ; shift
    main_dir="$*"
  else
    echo "*** Set-up file $ww3_env not found ***"
    exit
  fi

# 1.d Check / make directories   - - - - - - - - - - - - - - - - - - - - - - -

  if test -d $main_dir
  then
    cd $main_dir
  else
    echo "*** Directory $main_dir not found ***"
    exit
  fi

  if test -d bin
  then
    cd bin
  else
    echo "*** Directory $main_dir/bin not found ***"
    exit
  fi

# 1.e Check progs - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

# reg_programs = non-NetCDF programs
  reg_programs="ww3_grid"
  reg_programs="$reg_programs ww3_strt"
  reg_programs="$reg_programs ww3_bound"
  reg_programs="$reg_programs ww3_outf"
  reg_programs="$reg_programs ww3_outp"
  reg_programs="$reg_programs ww3_trck"
  reg_programs="$reg_programs ww3_grib"
  reg_programs="$reg_programs ww3_gint"
  reg_programs="$reg_programs gx_outf"
  reg_programs="$reg_programs gx_outp"
  reg_programs="$reg_programs ww3_uprstr"
  reg_programs="$reg_programs libww3"

# cdf_programs = NetCDF programs
  cdf_programs="ww3_prnc"
  cdf_programs="$cdf_programs ww3_ounf"
  cdf_programs="$cdf_programs ww3_ounp"
  cdf_programs="$cdf_programs ww3_bounc"
  cdf_programs="$cdf_programs ww3_trnc"

  if [ -n "`grep TIDE $switch_file`" ]
  then
    cdf_programs="$cdf_programs ww3_prtide"
  fi

  if [ -n "`grep SCRIPNC $switch_file`" ] || [ -n "`grep OASIS $switch_file`" ]
  then
    mpi_cdf_programs="$mpi_cdf_programs ww3_multi"
    #mpi_cdf_programs="$mpi_cdf_programs ww3_multi_esmf"
    mpi_cdf_programs="$mpi_cdf_programs ww3_sbs1"
  else
    mpi_reg_programs="$mpi_reg_programs ww3_multi"
    #mpi_reg_programs="$mpi_reg_programs ww3_multi_esmf"
    mpi_reg_programs="$mpi_reg_programs ww3_sbs1"
  fi


  if [ -n "`grep TRKNC $switch_file`" ]
  then
    cdf_programs="$cdf_programs ww3_systrk"
    systrck_nc4notrknc=0
  else
    if [ -n "`grep NC4 $switch_file`" ]
    then
      systrck_nc4notrknc=1
    else
      systrck_nc4notrknc=0
      reg_programs="$reg_programs ww3_systrk"
    fi
  fi

  if [ -n "`grep OASIS $switch_file`" ]
  then
    mpi_cdf_programs="$mpi_cdf_programs ww3_shel"
    cdf_programs="$cdf_programs ww3_prep"
    cdf_programs="$cdf_programs ww3_gspl"
  else
    mpi_reg_programs="$mpi_reg_programs ww3_shel"
    reg_programs="$reg_programs ww3_prep"
    reg_programs="$reg_programs ww3_gspl"
  fi

# 1.f Check NetCDF setup - - - - - - - - - - - - - - - - - - - - - - - - - - -

  if [ -z "$WWATCH3_NETCDF" ]
  then
    all_programs="$reg_programs"
    mpi_all_programs="$mpi_reg_programs"
  else
    all_programs="$reg_programs $cdf_programs"
    mpi_all_programs="$mpi_reg_programs $mpi_cdf_programs"
  fi

# progs = programs requested to compile
  if [ $default_mode -eq 1 ]
  then
    seq_progs="$all_programs"
    mpi_progs="$mpi_all_programs"
  else
    for prog in "$(echo $script_args)"
    do
      echo $prog
      if [ "$prog" == "ww3_shel" ] || [ "$prog" == "ww3_multi" ] || [ "$prog" == "ww3_multi_esmf" ] || [ "$prog" == "ww3_sbs1" ]
      then
        mpi_progs="$mpi_progs $prog"
      else
        seq_progs="$seq_progs $prog"
      fi
    done
  fi

# --------------------------------------------------------------------------- #
# 2. Process switch files                                                     #
# --------------------------------------------------------------------------- #

  sort_switch -s -r switch
  cp switch                             switch.hold
  sed -e 's/DIST/SHRD/g' \
      -e 's/OMPG //g'\
      -e 's/OMPH //g'\
      -e 's/OMPX //g'\
      -e 's/MPI //g'      switch.hold > switch.shrd
  sed 's/SHRD/DIST MPI/g' switch.shrd > switch.MPI

# --------------------------------------------------------------------------- #
# 3. Compile non-MPI codes                                                    #
# --------------------------------------------------------------------------- #

  if [ ! -z "$seq_progs" ]
  then
    cp switch.shrd switch
    w3_make $seq_progs
    cp switch.shrd ../exe/
    mv ../exe/exec_type ../exe/exec_type_SHRD
    mkdir -p ../exe_SHRD
    rsync -a ../exe/ ../exe_SHRD/
    mkdir -p ../tmp_SHRD
    rsync -a ../tmp/ ../tmp_SHRD/
    rm -r ../tmp
  fi

# --------------------------------------------------------------------------- #
# 3. Compile MPI codes                                                        #
# --------------------------------------------------------------------------- #

  if [ ! -z "$mpi_progs" ]
  then
    cp switch.MPI switch
    w3_make $mpi_progs
    cp switch.MPI ../exe/
    mv ../exe/exec_type ../exe/exec_type_MPI
    if [ ! -z "$seq_progs" ]
    then
      rsync -a ../exe_SHRD/ ../exe/
      rm -r ../exe_SHRD
    fi
    mkdir -p ../tmp_DIST
    rsync -a ../tmp/ ../tmp_DIST/
    rm -r ../tmp
    ln -sf tmp_DIST ../tmp
  else
    rsync -a ../exe_SHRD/ ../exe/
    rm -rf ../exe_SHRD
    ln -sf tmp_SHRD ../tmp
  fi
# --------------------------------------------------------------------------- #
# 4. Reset switch file                                                        #
# --------------------------------------------------------------------------- #

  cp switch.hold switch

# --------------------------------------------------------------------------- #
# 5. Clean up                                                                 #
# --------------------------------------------------------------------------- #

  rm -f switch.hold switch.shrd switch.MPI

  echo ' '
  echo ' '
  echo '                   *******************************'
  echo '                 ***       End of program        ***'
  echo '                   *******************************'
  echo ' '

# end of script ------------------------------------------------------------- #
